month.2.quarter <- function(month){
date.string <- paste(month,"01",sep = "")
date <- ymd(date.string)
#quarter <- paste(year(date),"0",quarter(date),sep="")
quarter <- as.yearqtr(ymd(date.string))
return(quarter)
}
#month.2.quarter(198603) #for test
quarter.return <- function(return){
#return should be a vector of monthly return
temp <- 100 * (prod(return/100 + 1) - 1)
#temp <- sum(return)
return(temp)
}
ff_factors[,"quarter":=.(month.2.quarter(month))]
ff_factors <- ff_factors[,lapply(.SD, quarter.return), by = .(quarter)]
ff_factors <- ff_factors[quarter >= "1963 Q3" & quarter <= "1998 Q3"]
ff_factors[, "month" := NULL]
#cay
cay_data <- read.table("cay.txt",header=TRUE)
cay_data <- data.table(cay_data)
cay <- cay_data[1:.N-1,.(Quarter,cay)]
cay <- cay[Quarter >= 196302 & Quarter <= 199802] #lag cay
#cay <- cay[Quarter >= 196303 & Quarter <= 199803]
cay[,("quarter"):=as.yearqtr(parse_date_time(Quarter,orders="Yq"))]
cay[,("Quarter"):=NULL]
#demean cay
cay[,("cay"):=.(cay - mean(cay))]
#delta y
delta_y <- cay_data[1:.N-1,.(Quarter,labor.income.y)]
delta_y <- delta_y[Quarter >= 196303 & Quarter <= 199803]
#delta_y[,("d_y"):=c(0,diff(labor.income.y)) * 100]
delta_y[,("d_y"):=c(0,diff(labor.income.y)) ]
delta_y[,"labor.income.y":=NULL]
delta_y <- delta_y[1:(.N-1)]
#delta_y <- delta_y[2:.N]
delta_y[,("quarter"):=as.yearqtr(parse_date_time(Quarter,orders="Yq"))]
delta_y[,("Quarter"):=NULL]
#the data for labor income growth only goes to second quarater
#of 1998
#d_c consumption growth
d_c <- cay_data[1:.N-1,.(Quarter,consumption.c)]
d_c <- d_c[Quarter >= 196303 & Quarter <= 199803]
# d_c[,("d_c"):=c(diff(consumption.c),0) * 100]
# d_c <- d_c[1:(.N-1)]
d_c[,("d_c"):=c(0,diff(consumption.c)) * 100]
d_c <- d_c[2:(.N)]
d_c[,("quarter"):=as.yearqtr(parse_date_time(Quarter,orders="Yq"))]
d_c[,c("Quarter","consumption.c"):=NULL]
#25 FF portfolios
ff_ports <- read.table("25_Portfolios.txt",header=T)
ff_ports <- data.table(ff_ports)
ff_ports[,"quarter":=.(month.2.quarter(month))]
ff_ports <- ff_ports[,lapply(.SD, quarter.return), by = .(quarter)]
ff_ports[, "month" := NULL]
ff_ports <- ff_ports[quarter >= "1963 Q3" & quarter <= "1998 Q3"]
# #price index
# p.i <- read.table("price_index.csv",header=TRUE,sep=",")
# p.i <- data.table(p.i)
# #p.i[,("DATE"):= ymd(DATE)]
# p.i[,("quarter"):=as.yearqtr(DATE,format = "%Y-%m-%d")]
# p.i[,("inflation"):= c(0,diff(log(CPIAUCSL)))]
# p.i[,c("DATE","CPIAUCSL"):=NULL]
# p.i <- p.i[,lapply(.SD,quarter.return), by =.(quarter)]
# p.i[,("inflation"):=.(inflation * 100)]
# p.i <- p.i[quarter >= "1963 Q3" & quarter <= "1998 Q3"]
#
# #calculate real return
# deflate <- function(vec,inf.vec){
#   return(vec - inf.vec)
# }
#
# #deflate for FF portfolios and FF factors
# ff_ports[,2:26] <- lapply(ff_ports[,2:26],deflate,inf.vec = p.i[,inflation])
# ff_factors[,2:4] <- lapply(ff_factors[,2:4],deflate,inf.vec = p.i[,inflation])
pst.mean <- ff_factors[,1:2]
pst.mean[,("rolling.mean"):=rep(0,dim(ff_factors)[1])]
for(j in 1:dim(pst.mean)[1]){
pst.mean[j,3] <- colMeans(pst.mean[1:j,2])
}
#temp.plot(pst.mean,3)
pst.mean[,("rolling.mean"):=.(rolling.mean - mean(rolling.mean))]
}else if (sample == "full"){
#Fama French factors
ff_factors <- read.table("FF_factor.txt",header = TRUE)
ff_factors <- data.table(ff_factors)
ff_factors[,("Mkt.RF") := .(Mkt.RF + RF)]
names(ff_factors)[2] <- "Rvw"
ff_factors[,c("RF"):=NULL]
ff_factors[,"quarter":=.(month.2.quarter(month))]
ff_factors <- ff_factors[,lapply(.SD, quarter.return), by = .(quarter)]
ff_factors <- ff_factors[quarter >= "1963 Q3" & quarter <= "2015 Q3"]
ff_factors[, "month" := NULL]
#cay
cay_data <- read.table("cay_current.txt",header=TRUE)
cay_data <- data.table(cay_data)
cay <- cay_data[,.(date,cay)] #cay
#cay <- cay_data[,.(date,cay_MS)] #Markov Switching cay
cay <- cay[date >= 196302 & date <= 201502] #lag cay
cay[,("quarter"):=as.yearqtr(parse_date_time(date,orders="Yq"))]
cay[,("date"):=NULL]
#demean cay
cay[,("cay"):=.(cay - mean(cay))]
#delta y
delta_y <- cay_data[,.(date,y)]
delta_y <- delta_y[date >= 196303 & date <= 201503]
#let y_{t+1} - y_t be t's income growth rate
delta_y[,("d_y"):=c(diff(y),0) ]
delta_y[,"y":=NULL]
delta_y <- delta_y[1:(.N-1)]
delta_y[,("quarter"):=as.yearqtr(parse_date_time(date,orders="Yq"))]
delta_y[,("date"):=NULL]
#d_c consumption growth
d_c <- cay_data[,.(date,c)]
d_c <- d_c[date >= 196303 & date <= 201503]
d_c[,("d_c"):=c(0,diff(c)) * 100]
d_c <- d_c[2:(.N)]
d_c[,("quarter"):=as.yearqtr(parse_date_time(date,orders="Yq"))]
d_c[,c("date","c"):=NULL]
#25 FF portfolios
ff_ports <- read.table("25_Portfolios.txt",header=T)
ff_ports <- data.table(ff_ports)
ff_ports[,"quarter":=.(month.2.quarter(month))]
ff_ports <- ff_ports[,lapply(.SD, quarter.return), by = .(quarter)]
ff_ports[, "month" := NULL]
ff_ports <- ff_ports[quarter >= "1963 Q3" & quarter <= "2015 Q3"]
#pst.mean
pst.mean <- ff_factors[,1:2]
pst.mean[,("rolling.mean"):=rep(0,dim(ff_factors)[1])]
for(j in 1:dim(pst.mean)[1]){
pst.mean[j,3] <- colMeans(pst.mean[1:j,2])
}
#temp.plot(pst.mean,3)
pst.mean[,("rolling.mean"):=.(rolling.mean - mean(rolling.mean))]
}
ff_factors
plot(ff_factors[3])
# Table 1 -----------------------------------------------------------------
report <- list()
fig1.df <- data.frame(ff_ret)
data.len <- dim(cay)[1]
##CAPM
port.df <- ff_ports[,2:26]
factor.df <- ff_factors[,2]
print("CAPM Model")
result <- fama.macbeth(port.df,factor.df)
fit.plot(ff_ret,result)
fig1.df <- cbind(fig1.df,result[[5]])
report[[1]] <- result
#Jaganathan and Wang  #this looks different than LL
income.len <- dim(delta_y)[1]
if(sample == "original") {
factor.df <- cbind(ff_factors[1:data.len-1,2],delta_y[,"d_y"])
port.df <- ff_ports[2:data.len,2:26]
} else if (sample == "full"){
factor.df <- cbind(ff_factors[1:income.len,2],delta_y[,"d_y"])
port.df <- ff_ports[1:income.len,2:26]
}
print("MODEL 2")
fama.macbeth(port.df,factor.df)
##Fama French model 3
port.df <- ff_ports[,2:26]
factor.df <- ff_factors[,2:4]
print("Fama Macbeth 3 Factor Model")
result <- fama.macbeth(port.df,factor.df)
fit.plot(ff_ret,result)
fig1.df <- cbind(fig1.df,result[[5]])
report[[3]] <- result
##cay CAPM model 4
port.df <- ff_ports[,2:26]
factor.df <- ff_factors[,2]
factor.df[,("cay"):=cay[,"cay"]]
factor.df[,("cayRvw"):=.(cay * Rvw)]
print("MODEL 4")
fama.macbeth(port.df,factor.df)
##model 5
factor.df[,("cay"):=NULL]
print("MODEL 5")
fama.macbeth(port.df,factor.df)
fit.plot(ff_ret,result)
##model 6 cay income CAPM
factor.df <- ff_factors[2:data.len,2]
factor.df[,("cay"):=cay[2:data.len,"cay"]]
factor.df[,("cayRvw"):=.(cay * Rvw)]
factor.df <- factor.df[1:income.len]
factor.df[,("d_y"):=delta_y[,"d_y"]]
factor.df[,("cay.d_y"):= .(cay * d_y)]
port.df <- ff_ports[2:data.len,2:26]
print("cay scaling income CAPM")
result <- fama.macbeth(port.df,factor.df)
fit.plot(ff_ret,result)
report[[4]] <- result
##model 7
factor.df[,("cay"):=NULL]
print("MODEL 7")
fama.macbeth(port.df,factor.df)
# Table 3 -----------------------------------------------------------------
data.len <- dim(cay)[1]
##model 1
#consumption goes to 1998 quarter 2 for original data
factor.df <- d_c[,1]
# if (sample == "original"){
#   port.df <- ff_ports[1:(data.len-1),2:26]
# } else if (sample == "full"){
#   port.df <- ff_ports[2:(data.len),2:26]
# }
port.df <- ff_ports[2:(data.len),2:26]
print("CCAPM Model")
result <- fama.macbeth(port.df,factor.df)
fit.plot(ff_ret,result)
fig1.df <- cbind(fig1.df,result[[5]])
report[[2]] <- result
#moddel 2
#port.df <- ff_ports[1:(data.len-1),2:26]
port.df <- ff_ports[2:(data.len),2:26]
factor.df <- d_c[,1]
factor.df[,("cay"):=cay[2:(data.len),"cay"]]
factor.df[,("cayd_c"):=.(cay * d_c)]
print("cay scaling CCAPM model")
result <- fama.macbeth(port.df,factor.df)
report[[5]] <- result
#use consumption defined as c_{t+1} - c_{t} as the t+1 th period
#consuption growth will generate the preferrable result
fit.plot(ff_ret,result)
fig1.df <- cbind(fig1.df,result[[5]])
#model 3
# factor.df[,("cayd_c"):=NULL]
# print("MODEL 3")
# fama.macbeth(port.df,factor.df)
factor.df[,("cay"):=NULL]
print("MODEL 3")
fama.macbeth(port.df,factor.df)
#doesn't work
#past mean model scaling consumption
port.df <- ff_ports[2:(data.len),2:26]
factor.df <- d_c[,1]
factor.df[,("pst.mean"):=pst.mean[2:(data.len),"rolling.mean"]]
factor.df[,("pst.m.d_c"):=.(pst.mean * d_c)]
print("past mean scaling consumption model")
result <- fama.macbeth(port.df,factor.df)
fit.plot(ff_ret,result)
#FF + past.mean
##Fama French model 3
port.df <- ff_ports[,2:26]
factor.df <- ff_factors[,2:4]
factor.df[,"pst.mean"] <- pst.mean[,"rolling.mean"]
print("past mean as momentum model")
result <- fama.macbeth(port.df,factor.df)
fit.plot(ff_ret,result)
require(Matrix)
# Table 1 -----------------------------------------------------------------
report <- list()
fig1.df <- data.frame(ff_ret)
data.len <- dim(cay)[1]
##CAPM
port.df <- ff_ports[,2:26]
factor.df <- ff_factors[,2]
print("CAPM Model")
result <- fama.macbeth(port.df,factor.df)
fit.plot(ff_ret,result)
fig1.df <- cbind(fig1.df,result[[5]])
report[[1]] <- result
#Jaganathan and Wang  #this looks different than LL
income.len <- dim(delta_y)[1]
if(sample == "original") {
factor.df <- cbind(ff_factors[1:data.len-1,2],delta_y[,"d_y"])
port.df <- ff_ports[2:data.len,2:26]
} else if (sample == "full"){
factor.df <- cbind(ff_factors[1:income.len,2],delta_y[,"d_y"])
port.df <- ff_ports[1:income.len,2:26]
}
print("MODEL 2")
fama.macbeth(port.df,factor.df)
##Fama French model 3
port.df <- ff_ports[,2:26]
factor.df <- ff_factors[,2:4]
print("Fama Macbeth 3 Factor Model")
result <- fama.macbeth(port.df,factor.df)
fit.plot(ff_ret,result)
fig1.df <- cbind(fig1.df,result[[5]])
report[[3]] <- result
##cay CAPM model 4
port.df <- ff_ports[,2:26]
factor.df <- ff_factors[,2]
factor.df[,("cay"):=cay[,"cay"]]
factor.df[,("cayRvw"):=.(cay * Rvw)]
print("MODEL 4")
fama.macbeth(port.df,factor.df)
##model 5
factor.df[,("cay"):=NULL]
print("MODEL 5")
fama.macbeth(port.df,factor.df)
fit.plot(ff_ret,result)
##model 6 cay income CAPM
factor.df <- ff_factors[2:data.len,2]
factor.df[,("cay"):=cay[2:data.len,"cay"]]
factor.df[,("cayRvw"):=.(cay * Rvw)]
factor.df <- factor.df[1:income.len]
factor.df[,("d_y"):=delta_y[,"d_y"]]
factor.df[,("cay.d_y"):= .(cay * d_y)]
port.df <- ff_ports[2:data.len,2:26]
print("cay scaling income CAPM")
result <- fama.macbeth(port.df,factor.df)
fit.plot(ff_ret,result)
report[[4]] <- result
##model 7
factor.df[,("cay"):=NULL]
print("MODEL 7")
fama.macbeth(port.df,factor.df)
# Table 3 -----------------------------------------------------------------
data.len <- dim(cay)[1]
##model 1
#consumption goes to 1998 quarter 2 for original data
factor.df <- d_c[,1]
# if (sample == "original"){
#   port.df <- ff_ports[1:(data.len-1),2:26]
# } else if (sample == "full"){
#   port.df <- ff_ports[2:(data.len),2:26]
# }
port.df <- ff_ports[2:(data.len),2:26]
print("CCAPM Model")
result <- fama.macbeth(port.df,factor.df)
fit.plot(ff_ret,result)
fig1.df <- cbind(fig1.df,result[[5]])
report[[2]] <- result
#moddel 2
#port.df <- ff_ports[1:(data.len-1),2:26]
port.df <- ff_ports[2:(data.len),2:26]
factor.df <- d_c[,1]
factor.df[,("cay"):=cay[2:(data.len),"cay"]]
factor.df[,("cayd_c"):=.(cay * d_c)]
print("cay scaling CCAPM model")
result <- fama.macbeth(port.df,factor.df)
report[[5]] <- result
#use consumption defined as c_{t+1} - c_{t} as the t+1 th period
#consuption growth will generate the preferrable result
fit.plot(ff_ret,result)
fig1.df <- cbind(fig1.df,result[[5]])
#model 3
# factor.df[,("cayd_c"):=NULL]
# print("MODEL 3")
# fama.macbeth(port.df,factor.df)
factor.df[,("cay"):=NULL]
print("MODEL 3")
fama.macbeth(port.df,factor.df)
#doesn't work
#past mean model scaling consumption
port.df <- ff_ports[2:(data.len),2:26]
factor.df <- d_c[,1]
factor.df[,("pst.mean"):=pst.mean[2:(data.len),"rolling.mean"]]
factor.df[,("pst.m.d_c"):=.(pst.mean * d_c)]
print("past mean scaling consumption model")
result <- fama.macbeth(port.df,factor.df)
fit.plot(ff_ret,result)
#FF + past.mean
##Fama French model 3
port.df <- ff_ports[,2:26]
factor.df <- ff_factors[,2:4]
factor.df[,"pst.mean"] <- pst.mean[,"rolling.mean"]
print("past mean as momentum model")
result <- fama.macbeth(port.df,factor.df)
fit.plot(ff_ret,result)
result.ff
xfit<-seq(0,max(result.ff$t),length=1000)
yfit<-dchisq(xfit,df = 22)
plot(density(result.ff$t),ylim=c(0,max(yfit)),
main = "")
lines(xfit, yfit, col="blue", lwd=2)
plot(density(result.ff$t),ylim=c(0,max(yfit)),
main = "",xlab="")
?legend
plot(density(result.ff$t),ylim=c(0,max(yfit)),
main = "",xlab="",col="red")
lines(xfit, yfit, col="blue", lwd=2)
legend("topright", inset=.05, title="",
legend= c("Bootstrapped","Theoretical"),
col=c("red","blue"), horiz=TRUE)
plot(density(result.ff$t),ylim=c(0,max(yfit)),
main = "",xlab="",col="red")
lines(xfit, yfit, col="blue", lwd=2)
legend("topright", inset=.05, title="",
legend= c("Bootstrapped","Theoretical"),
col=c("red","blue"), lty=c(1,1),horiz=FALSE)
# k <- 25 - 3
plot(density(result.ff$t),ylim=c(0,max(yfit)),
main = "",xlab="",col="red")
lines(xfit, yfit, col="blue", lwd=2)
legend("topright", inset=.05,
legend= c("Bootstrapped","Theoretical"),
col=c("red","blue"), lty=c(1,1),horiz=FALSE)
legend("topright", inset=.05,
legend= c("Bootstrapped","Theoretical"),
col=c("red","blue"), lty=c(1,1),horiz=FALSE,
cex = 0.5)
xfit<-seq(0,max(result.ff$t),length=1000)
yfit<-dchisq(xfit,df = 22)
plot(density(result.ff$t),ylim=c(0,max(yfit)),
main = "",xlab="",col="red")
lines(xfit, yfit, col="blue", lwd=2)
legend("topright", inset=.05,
legend= c("Bootstrapped","Theoretical"),
col=c("red","blue"), lty=c(1,1),horiz=FALSE,
cex = 0.8)
xfit<-seq(0,max(result.ff$t),length=1000)
yfit<-dchisq(xfit,df = 22)
plot(density(result.ff$t),ylim=c(0,max(yfit)),
main = "",xlab="",col="red",lwd=2)
lines(xfit, yfit, col="blue", lwd=2)
legend("topright", inset=.05,
legend= c("Bootstrapped","Theoretical"),
col=c("red","blue"), lty=c(1,1),horiz=FALSE,
cex = 0.8)
xfit<-seq(0,max(result.ff$t),length=1000)
yfit<-dchisq(xfit,df = 22)
plot(density(result.ff$t),ylim=c(0,max(yfit)),
main = "",xlab="",col="red",lwd=2,
xlim=c(0,200))
lines(xfit, yfit, col="blue", lwd=2)
legend("topright", inset=.05,
legend= c("Bootstrapped","Theoretical"),
col=c("red","blue"), lty=c(1,1),horiz=FALSE,
cex = 0.8)
#h <- hist(result$t,nclass = 50)
xfit<-seq(0,max(result.ff$t),length=1000)
yfit<-dchisq(xfit,df = 22)
plot(density(result.ff$t),ylim=c(0,max(yfit)),
main = "",xlab="",col="red",lwd=2,
xlim=c(0,160))
lines(xfit, yfit, col="blue", lwd=2)
legend("topright", inset=.05,
legend= c("Bootstrapped","Theoretical"),
col=c("red","blue"), lty=c(1,1),horiz=FALSE,
cex = 0.8)
xfit<-seq(0,max(result.ff$t),length=1000)
yfit<-dchisq(xfit,df = 22)
plot(density(result.ff$t),ylim=c(0,max(yfit)),
main = "",xlab="",col="red",lwd=2,
xlim=c(0,160))
lines(xfit, yfit, col="blue", lwd=2)
legend("topright", inset=.05,
legend= c("Bootstrapped","Theoretical"),
col=c("red","blue"), lty=c(1,1),horiz=FALSE,
cex = 1)
pdf("bootstrap.pdf",width = 2, height=4)
xfit<-seq(0,max(result.ff$t),length=1000)
yfit<-dchisq(xfit,df = 22)
plot(density(result.ff$t),ylim=c(0,max(yfit)),
main = "",xlab="",col="red",lwd=2,
xlim=c(0,160))
lines(xfit, yfit, col="blue", lwd=2)
legend("topright", inset=.05,
legend= c("Bootstrapped","Theoretical"),
col=c("red","blue"), lty=c(1,1),horiz=FALSE,
cex = 1)
dev.off()
# k <- 25
pdf("bootstrap.pdf",width = 4, height=6)
xfit<-seq(0,max(result.ff$t),length=1000)
yfit<-dchisq(xfit,df = 22)
plot(density(result.ff$t),ylim=c(0,max(yfit)),
main = "",xlab="",col="red",lwd=2,
xlim=c(0,160))
lines(xfit, yfit, col="blue", lwd=2)
legend("topright", inset=.05,
legend= c("Bootstrapped","Theoretical"),
col=c("red","blue"), lty=c(1,1),horiz=FALSE,
cex = 1)
dev.off()
#h <- hist(result$t,nclass = 50)
pdf("bootstrap.pdf",width = 4, height=4)
xfit<-seq(0,max(result.ff$t),length=1000)
yfit<-dchisq(xfit,df = 22)
plot(density(result.ff$t),ylim=c(0,max(yfit)),
main = "",xlab="",col="red",lwd=2,
xlim=c(0,160))
lines(xfit, yfit, col="blue", lwd=2)
legend("topright", inset=.05,
legend= c("Bootstrapped","Theoretical"),
col=c("red","blue"), lty=c(1,1),horiz=FALSE,
cex = 1)
dev.off()
# k <- 25 - 3
pdf("bootstrap.pdf",width = 6, height=4)
xfit<-seq(0,max(result.ff$t),length=1000)
yfit<-dchisq(xfit,df = 22)
plot(density(result.ff$t),ylim=c(0,max(yfit)),
main = "",xlab="",col="red",lwd=2,
xlim=c(0,160))
lines(xfit, yfit, col="blue", lwd=2)
legend("topright", inset=.05,
legend= c("Bootstrapped","Theoretical"),
col=c("red","blue"), lty=c(1,1),horiz=FALSE,
cex = 1)
dev.off()
c <- 3
(c=c)
c(c=c)
(c=3)
letters
Letters
xfit<-seq(0,max(result.ff$t),length=1000)
yfit<-dchisq(xfit,df = 22)
plot(density(result.ff$t),ylim=c(0,max(yfit)),
main = "",xlab="",col="red",lwd=2,
xlim=c(0,100))
lines(xfit, yfit, col="blue", lwd=2)
legend("topright", inset=.05,
legend= c("Bootstrapped","Theoretical"),
col=c("red","blue"), lty=c(1,1),horiz=FALSE,
cex = 1)
?seq_along
install.packages("dlm")
